This txt file is for keeping personal notes, tracking my progress and also instead of 
talking to a duck, i find writing works better for me.. Also forgive the spelling..


I decided to upload these files as well with each app, someone might find it useful or interesting, or funny
to see how i solve some issues..


------------------------------------03.04.2022------------------------------------

__CURRENT ISSUE___

What i want to do:
	I want to load 5 pages at a time..
	so for 20 pages that would be 4 cycles..

 	! Now if one page fails to load, i want that page to try again 3 times..

! <- this is where i have an issue...


I am trying to achieve that like this:
loadPage(){
	While(!success){doSomething}
}


If something inside doSomething fails, it will set success to false..
If it succeeds it will set success to true


---------
That is what im trying to do and it sounds pretty simple...

What changes that state of success is an event listener...

So this event listener waits for the page to load up to a certain point,
and then it runs some code to extract the data...
If that event listener fails then it sets success to false...

____THE ISSUE____

That event listener changes the success to false or true,
however javascript has exited the while loop already,
so nothing happens...

It would be great if we could await that event listener
so that javascript doesnt continue to go trough the while function until
we say it should

However i need javascript to continue loading the page...

----What are other ways of doing this?
1. i can load page by page, which will be slower but easier to work with and control

2. i can do it this way, but instead of handling the page reload inside
the function, i can handle it outside by storing the pages that did not return the correct data

I can do it the other two ways, but this current way of doing it seems
like the best way for me
And also it's a challenge to solve..


______Possible solutions______

What if i create another function

A function that will regulate this issue..

async function handler(URL)
	{
		var fail = true;
		var count = 0;
		var data;

		while(fail && count < 5)
			{
				count ++;

				var a = await loadPage(url);

				if (a === promise.failed || a === undefined || a === bad data)
					{
						fail = true;
						data = false;
					}
				else { fail = false; data = a;}
			}
		


			if( data != false){return data;}else{return false;}
	}



------------------------------------06.04.2022------------------------------------

So after a lot of reading and trying to solve this problem
I dug deeper and found what seems to be my problem..


1. I want to return data from a nested function, to the main function
and then the main function returns that data..

That is possible, and that is not a problem..


This next part is the problem.

2. That second function which is inside the main one.
It's async...


___The struggle___

That async function takes time to return something..
And by the time the async function returns that,
i have already returned an empty variable(undefined) from the main function

How do i get over this issue...

1. If i await the async function, and store that in x variable...
then i can return it easly, no issues there..

HOWEVER...

The problem is. For my purposes, i cannot await..
Because the way i set this up is, i need the page to keep loading,
and it won't load if i await something...




So how can i solve this issue...
Can i split it into multiple smaller problems...
Can i seperate page loading and extraction...


What do i absolutely need to do here..

1. I need to load the page at all times. UNTIL my content shows up...

2. When the content shows up, then i need to extract that data and return it...

3. I need this to be returned in a way that i can save it to a variable..

ex. 
var x = loadPage().. Load page should now be the result..



What if:

dataLoaded.then()//instead of returning, which we can't in this case, and we can't await

what if we passed that to another function like so:

dataLoaded.then((data)=>{

if(data good){dataIsGood = true; handleData(data)}
else if(data bad){dataIsGood = false;});
return dataIsGood;


and we pass this into a handlerFunction, 
which if dataIsGood is false, reloads the page again and again...



And the handleData function will say something like:

handleData(data)=>
	{
	listOfData.push(data);
	}


And if data is bad...
We need to somehow do this again




------------------------------------08.04.2022------------------------------------

The last issue was solved...

I realized that i can't return data the way i wanted..
Once you go async, you can't really go back to sync code the way i wanted to...

What i did was, return the promise of the page.waitForSelector...

And then i handled the data once it came...



It all works now..



___ New feature ___

Now i added the feature to save this information to a file...

Next step is to make it so that i can load x pages at a time, instead of all at once...

And then i will work on exporting this data to excel...

After that, i might get more data, or make it dynamic, so that if i click on one link, it loads the image
and a description...

I will see what is the biggest challenge to do and where there is new stuff to learn...











